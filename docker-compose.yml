networks:
  monitoring:
    driver: bridge

volumes:
  db_data:
    driver: local
  grafana_data:
    driver: local
  identity_db_data:
    driver: local

services:
  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_ALLOWED}
    volumes:
      - db_data:/var/lib/postgresql/data
    container_name: db_postgresql_container
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - monitoring
      
  identity_db:
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_IDENTITY}
    volumes:
      - identity_db_data:/var/lib/postgresql/data
    container_name: identity_db_postgresql_container
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - monitoring

  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"
      - "8888:8888"
      - "13133:13133"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - monitoring

  alloyeditor_webapi:
    build:
      context: .
      dockerfile: Bredinin.AlloyEditor.WebApi/Dockerfile
    ports:
      - "5019:5019"
    container_name: alloyeditor_web_api
    environment:
      ConnectionStrings__DefaultConnection: "Host=db;Port=5432;Database=${POSTGRES_DB_ALLOWED};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}"
      Otel__ServiceName: "alloyeditor_webapi"  # Уникальное имя сервиса для OpenTelemetry
      Otel__Endpoint: "http://otel-collector:4317"
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      JWT_KEY: ${JWT_KEY}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
    depends_on:
      otel-collector:
        condition: service_started
      db:
        condition: service_healthy
    networks:
      - monitoring
  
  identity_service:
    build:
      context: .
      dockerfile: Bredinin.AlloyEditor.Identity.Service/Dockerfile
    ports:
      - "5020:5020"
    container_name: alloyeditor_identity_service
    environment:
      ConnectionStrings__DefaultConnection: "Host=identity_db;Port=5432;Database=${POSTGRES_DB_IDENTITY};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}"
      ASPNETCORE_URLS: "http://+:5020"
      Otel__ServiceName: "identity-service" 
      Otel__Endpoint: "http://otel-collector:4317"
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      JWT_KEY: ${JWT_KEY}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
    depends_on:
      otel-collector:
        condition: service_started
      identity_db:
        condition: service_healthy
    networks:
      - monitoring
   
  api_gateway:
    build:
      context: .
      dockerfile: Bredinin.AlloyEditor.Gateway/Dockerfile
    ports:
      - "5030:5030"
    container_name: alloyeditor_api_gateway
    environment:
      ASPNETCORE_URLS: "http://+:5030"
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    depends_on:
      alloyeditor_webapi:
        condition: service_started
      identity_service:
        condition: service_started
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - otel-collector
    networks:
      - monitoring

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_ADMIN_PASSWORD}
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - monitoring